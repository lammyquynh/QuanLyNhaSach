#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinqToSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_NS")]
	public partial class QL_NSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCT_HOADON(CT_HOADON instance);
    partial void UpdateCT_HOADON(CT_HOADON instance);
    partial void DeleteCT_HOADON(CT_HOADON instance);
    partial void InsertPHIEUNHAP(PHIEUNHAP instance);
    partial void UpdatePHIEUNHAP(PHIEUNHAP instance);
    partial void DeletePHIEUNHAP(PHIEUNHAP instance);
    partial void InsertCT_PHIEUNHAP(CT_PHIEUNHAP instance);
    partial void UpdateCT_PHIEUNHAP(CT_PHIEUNHAP instance);
    partial void DeleteCT_PHIEUNHAP(CT_PHIEUNHAP instance);
    partial void InsertDM_MANHINH(DM_MANHINH instance);
    partial void UpdateDM_MANHINH(DM_MANHINH instance);
    partial void DeleteDM_MANHINH(DM_MANHINH instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertKHUYENMAI(KHUYENMAI instance);
    partial void UpdateKHUYENMAI(KHUYENMAI instance);
    partial void DeleteKHUYENMAI(KHUYENMAI instance);
    partial void InsertLOAIHANGHOA(LOAIHANGHOA instance);
    partial void UpdateLOAIHANGHOA(LOAIHANGHOA instance);
    partial void DeleteLOAIHANGHOA(LOAIHANGHOA instance);
    partial void InsertLOAIKHACHHANG(LOAIKHACHHANG instance);
    partial void UpdateLOAIKHACHHANG(LOAIKHACHHANG instance);
    partial void DeleteLOAIKHACHHANG(LOAIKHACHHANG instance);
    partial void InsertNHACUNGCAP(NHACUNGCAP instance);
    partial void UpdateNHACUNGCAP(NHACUNGCAP instance);
    partial void DeleteNHACUNGCAP(NHACUNGCAP instance);
    partial void InsertNHANVIEN(NHANVIEN instance);
    partial void UpdateNHANVIEN(NHANVIEN instance);
    partial void DeleteNHANVIEN(NHANVIEN instance);
    partial void InsertNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void UpdateNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void DeleteNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void InsertNHOMNGUOIDUNG_NV(NHOMNGUOIDUNG_NV instance);
    partial void UpdateNHOMNGUOIDUNG_NV(NHOMNGUOIDUNG_NV instance);
    partial void DeleteNHOMNGUOIDUNG_NV(NHOMNGUOIDUNG_NV instance);
    partial void InsertPHANQUYEN(PHANQUYEN instance);
    partial void UpdatePHANQUYEN(PHANQUYEN instance);
    partial void DeletePHANQUYEN(PHANQUYEN instance);
    partial void InsertHANGHOA(HANGHOA instance);
    partial void UpdateHANGHOA(HANGHOA instance);
    partial void DeleteHANGHOA(HANGHOA instance);
    #endregion
		
		public QL_NSDataContext() : 
				base(global::LinqToSQL.Properties.Settings.Default.QL_NSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QL_NSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_NSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_NSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_NSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CT_HOADON> CT_HOADONs
		{
			get
			{
				return this.GetTable<CT_HOADON>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this.GetTable<PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<CT_PHIEUNHAP> CT_PHIEUNHAPs
		{
			get
			{
				return this.GetTable<CT_PHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<DM_MANHINH> DM_MANHINHs
		{
			get
			{
				return this.GetTable<DM_MANHINH>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<KHUYENMAI> KHUYENMAIs
		{
			get
			{
				return this.GetTable<KHUYENMAI>();
			}
		}
		
		public System.Data.Linq.Table<LOAIHANGHOA> LOAIHANGHOAs
		{
			get
			{
				return this.GetTable<LOAIHANGHOA>();
			}
		}
		
		public System.Data.Linq.Table<LOAIKHACHHANG> LOAIKHACHHANGs
		{
			get
			{
				return this.GetTable<LOAIKHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<NHACUNGCAP> NHACUNGCAPs
		{
			get
			{
				return this.GetTable<NHACUNGCAP>();
			}
		}
		
		public System.Data.Linq.Table<NHANVIEN> NHANVIENs
		{
			get
			{
				return this.GetTable<NHANVIEN>();
			}
		}
		
		public System.Data.Linq.Table<NHOMNGUOIDUNG> NHOMNGUOIDUNGs
		{
			get
			{
				return this.GetTable<NHOMNGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<NHOMNGUOIDUNG_NV> NHOMNGUOIDUNG_NVs
		{
			get
			{
				return this.GetTable<NHOMNGUOIDUNG_NV>();
			}
		}
		
		public System.Data.Linq.Table<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this.GetTable<PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<HANGHOA> HANGHOAs
		{
			get
			{
				return this.GetTable<HANGHOA>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_HOADON")]
	public partial class CT_HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _MAHH;
		
		private System.Nullable<int> _SOLUONG_BAN;
		
		private System.Nullable<double> _DONGIA_BAN;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<HANGHOA> _HANGHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMAHHChanging(string value);
    partial void OnMAHHChanged();
    partial void OnSOLUONG_BANChanging(System.Nullable<int> value);
    partial void OnSOLUONG_BANChanged();
    partial void OnDONGIA_BANChanging(System.Nullable<double> value);
    partial void OnDONGIA_BANChanged();
    #endregion
		
		public CT_HOADON()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._HANGHOA = default(EntityRef<HANGHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHH", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHH
		{
			get
			{
				return this._MAHH;
			}
			set
			{
				if ((this._MAHH != value))
				{
					if (this._HANGHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHHChanging(value);
					this.SendPropertyChanging();
					this._MAHH = value;
					this.SendPropertyChanged("MAHH");
					this.OnMAHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG_BAN", DbType="Int")]
		public System.Nullable<int> SOLUONG_BAN
		{
			get
			{
				return this._SOLUONG_BAN;
			}
			set
			{
				if ((this._SOLUONG_BAN != value))
				{
					this.OnSOLUONG_BANChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG_BAN = value;
					this.SendPropertyChanged("SOLUONG_BAN");
					this.OnSOLUONG_BANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA_BAN", DbType="Float")]
		public System.Nullable<double> DONGIA_BAN
		{
			get
			{
				return this._DONGIA_BAN;
			}
			set
			{
				if ((this._DONGIA_BAN != value))
				{
					this.OnDONGIA_BANChanging(value);
					this.SendPropertyChanging();
					this._DONGIA_BAN = value;
					this.SendPropertyChanged("DONGIA_BAN");
					this.OnDONGIA_BANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CT_HOADON", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CT_HOADONs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CT_HOADONs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_CT_HOADON", Storage="_HANGHOA", ThisKey="MAHH", OtherKey="MAHH", IsForeignKey=true)]
		public HANGHOA HANGHOA
		{
			get
			{
				return this._HANGHOA.Entity;
			}
			set
			{
				HANGHOA previousValue = this._HANGHOA.Entity;
				if (((previousValue != value) 
							|| (this._HANGHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGHOA.Entity = null;
						previousValue.CT_HOADONs.Remove(this);
					}
					this._HANGHOA.Entity = value;
					if ((value != null))
					{
						value.CT_HOADONs.Add(this);
						this._MAHH = value.MAHH;
					}
					else
					{
						this._MAHH = default(string);
					}
					this.SendPropertyChanged("HANGHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUNHAP")]
	public partial class PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPG;
		
		private string _MANV;
		
		private string _MANCC;
		
		private System.Nullable<System.DateTime> _NGAYNHAP;
		
		private System.Nullable<double> _TONGTHANHTIEN_NHAP;
		
		private EntitySet<CT_PHIEUNHAP> _CT_PHIEUNHAPs;
		
		private EntityRef<NHACUNGCAP> _NHACUNGCAP;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPGChanging(string value);
    partial void OnMAPGChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnNGAYNHAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHAPChanged();
    partial void OnTONGTHANHTIEN_NHAPChanging(System.Nullable<double> value);
    partial void OnTONGTHANHTIEN_NHAPChanged();
    #endregion
		
		public PHIEUNHAP()
		{
			this._CT_PHIEUNHAPs = new EntitySet<CT_PHIEUNHAP>(new Action<CT_PHIEUNHAP>(this.attach_CT_PHIEUNHAPs), new Action<CT_PHIEUNHAP>(this.detach_CT_PHIEUNHAPs));
			this._NHACUNGCAP = default(EntityRef<NHACUNGCAP>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPG", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPG
		{
			get
			{
				return this._MAPG;
			}
			set
			{
				if ((this._MAPG != value))
				{
					this.OnMAPGChanging(value);
					this.SendPropertyChanging();
					this._MAPG = value;
					this.SendPropertyChanged("MAPG");
					this.OnMAPGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NChar(5)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="NChar(5)")]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					if (this._NHACUNGCAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYNHAP
		{
			get
			{
				return this._NGAYNHAP;
			}
			set
			{
				if ((this._NGAYNHAP != value))
				{
					this.OnNGAYNHAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAP = value;
					this.SendPropertyChanged("NGAYNHAP");
					this.OnNGAYNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTHANHTIEN_NHAP", DbType="Float")]
		public System.Nullable<double> TONGTHANHTIEN_NHAP
		{
			get
			{
				return this._TONGTHANHTIEN_NHAP;
			}
			set
			{
				if ((this._TONGTHANHTIEN_NHAP != value))
				{
					this.OnTONGTHANHTIEN_NHAPChanging(value);
					this.SendPropertyChanging();
					this._TONGTHANHTIEN_NHAP = value;
					this.SendPropertyChanged("TONGTHANHTIEN_NHAP");
					this.OnTONGTHANHTIEN_NHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CT_PHIEUNHAP", Storage="_CT_PHIEUNHAPs", ThisKey="MAPG", OtherKey="MAPG")]
		public EntitySet<CT_PHIEUNHAP> CT_PHIEUNHAPs
		{
			get
			{
				return this._CT_PHIEUNHAPs;
			}
			set
			{
				this._CT_PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAP", Storage="_NHACUNGCAP", ThisKey="MANCC", OtherKey="MANCC", IsForeignKey=true)]
		public NHACUNGCAP NHACUNGCAP
		{
			get
			{
				return this._NHACUNGCAP.Entity;
			}
			set
			{
				NHACUNGCAP previousValue = this._NHACUNGCAP.Entity;
				if (((previousValue != value) 
							|| (this._NHACUNGCAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHACUNGCAP.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHACUNGCAP.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MANCC = value.MANCC;
					}
					else
					{
						this._MANCC = default(string);
					}
					this.SendPropertyChanged("NHACUNGCAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.PHIEUNHAPs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.PHIEUNHAPs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_PHIEUNHAPs(CT_PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = this;
		}
		
		private void detach_CT_PHIEUNHAPs(CT_PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUNHAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_PHIEUNHAP")]
	public partial class CT_PHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHH;
		
		private string _MAPG;
		
		private System.Nullable<int> _SOLUONG_NHAP;
		
		private System.Nullable<double> _DONGIA_NHAP;
		
		private EntityRef<PHIEUNHAP> _PHIEUNHAP;
		
		private EntityRef<HANGHOA> _HANGHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHHChanging(string value);
    partial void OnMAHHChanged();
    partial void OnMAPGChanging(string value);
    partial void OnMAPGChanged();
    partial void OnSOLUONG_NHAPChanging(System.Nullable<int> value);
    partial void OnSOLUONG_NHAPChanged();
    partial void OnDONGIA_NHAPChanging(System.Nullable<double> value);
    partial void OnDONGIA_NHAPChanged();
    #endregion
		
		public CT_PHIEUNHAP()
		{
			this._PHIEUNHAP = default(EntityRef<PHIEUNHAP>);
			this._HANGHOA = default(EntityRef<HANGHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHH", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHH
		{
			get
			{
				return this._MAHH;
			}
			set
			{
				if ((this._MAHH != value))
				{
					if (this._HANGHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHHChanging(value);
					this.SendPropertyChanging();
					this._MAHH = value;
					this.SendPropertyChanged("MAHH");
					this.OnMAHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPG", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPG
		{
			get
			{
				return this._MAPG;
			}
			set
			{
				if ((this._MAPG != value))
				{
					if (this._PHIEUNHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPGChanging(value);
					this.SendPropertyChanging();
					this._MAPG = value;
					this.SendPropertyChanged("MAPG");
					this.OnMAPGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG_NHAP", DbType="Int")]
		public System.Nullable<int> SOLUONG_NHAP
		{
			get
			{
				return this._SOLUONG_NHAP;
			}
			set
			{
				if ((this._SOLUONG_NHAP != value))
				{
					this.OnSOLUONG_NHAPChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG_NHAP = value;
					this.SendPropertyChanged("SOLUONG_NHAP");
					this.OnSOLUONG_NHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA_NHAP", DbType="Float")]
		public System.Nullable<double> DONGIA_NHAP
		{
			get
			{
				return this._DONGIA_NHAP;
			}
			set
			{
				if ((this._DONGIA_NHAP != value))
				{
					this.OnDONGIA_NHAPChanging(value);
					this.SendPropertyChanging();
					this._DONGIA_NHAP = value;
					this.SendPropertyChanged("DONGIA_NHAP");
					this.OnDONGIA_NHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUNHAP_CT_PHIEUNHAP", Storage="_PHIEUNHAP", ThisKey="MAPG", OtherKey="MAPG", IsForeignKey=true)]
		public PHIEUNHAP PHIEUNHAP
		{
			get
			{
				return this._PHIEUNHAP.Entity;
			}
			set
			{
				PHIEUNHAP previousValue = this._PHIEUNHAP.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUNHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUNHAP.Entity = null;
						previousValue.CT_PHIEUNHAPs.Remove(this);
					}
					this._PHIEUNHAP.Entity = value;
					if ((value != null))
					{
						value.CT_PHIEUNHAPs.Add(this);
						this._MAPG = value.MAPG;
					}
					else
					{
						this._MAPG = default(string);
					}
					this.SendPropertyChanged("PHIEUNHAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_CT_PHIEUNHAP", Storage="_HANGHOA", ThisKey="MAHH", OtherKey="MAHH", IsForeignKey=true)]
		public HANGHOA HANGHOA
		{
			get
			{
				return this._HANGHOA.Entity;
			}
			set
			{
				HANGHOA previousValue = this._HANGHOA.Entity;
				if (((previousValue != value) 
							|| (this._HANGHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HANGHOA.Entity = null;
						previousValue.CT_PHIEUNHAPs.Remove(this);
					}
					this._HANGHOA.Entity = value;
					if ((value != null))
					{
						value.CT_PHIEUNHAPs.Add(this);
						this._MAHH = value.MAHH;
					}
					else
					{
						this._MAHH = default(string);
					}
					this.SendPropertyChanged("HANGHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DM_MANHINH")]
	public partial class DM_MANHINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAMANHINH;
		
		private string _TENMANHINH;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAMANHINHChanging(string value);
    partial void OnMAMANHINHChanged();
    partial void OnTENMANHINHChanging(string value);
    partial void OnTENMANHINHChanged();
    #endregion
		
		public DM_MANHINH()
		{
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMANHINH", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMANHINH
		{
			get
			{
				return this._MAMANHINH;
			}
			set
			{
				if ((this._MAMANHINH != value))
				{
					this.OnMAMANHINHChanging(value);
					this.SendPropertyChanging();
					this._MAMANHINH = value;
					this.SendPropertyChanged("MAMANHINH");
					this.OnMAMANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMANHINH", DbType="NVarChar(50)")]
		public string TENMANHINH
		{
			get
			{
				return this._TENMANHINH;
			}
			set
			{
				if ((this._TENMANHINH != value))
				{
					this.OnTENMANHINHChanging(value);
					this.SendPropertyChanging();
					this._TENMANHINH = value;
					this.SendPropertyChanged("TENMANHINH");
					this.OnTENMANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DM_MANHINH_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="MAMANHINH", OtherKey="MAMANHINH")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.DM_MANHINH = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.DM_MANHINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _MANV;
		
		private string _MAKH;
		
		private System.Nullable<System.DateTime> _NGAYLAP;
		
		private System.Nullable<double> _TONGTHANHTIEN;
		
		private EntitySet<CT_HOADON> _CT_HOADONs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnNGAYLAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYLAPChanged();
    partial void OnTONGTHANHTIENChanging(System.Nullable<double> value);
    partial void OnTONGTHANHTIENChanged();
    #endregion
		
		public HOADON()
		{
			this._CT_HOADONs = new EntitySet<CT_HOADON>(new Action<CT_HOADON>(this.attach_CT_HOADONs), new Action<CT_HOADON>(this.detach_CT_HOADONs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NChar(5)")]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="NChar(5)")]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYLAP", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYLAP
		{
			get
			{
				return this._NGAYLAP;
			}
			set
			{
				if ((this._NGAYLAP != value))
				{
					this.OnNGAYLAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYLAP = value;
					this.SendPropertyChanged("NGAYLAP");
					this.OnNGAYLAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTHANHTIEN", DbType="Float")]
		public System.Nullable<double> TONGTHANHTIEN
		{
			get
			{
				return this._TONGTHANHTIEN;
			}
			set
			{
				if ((this._TONGTHANHTIEN != value))
				{
					this.OnTONGTHANHTIENChanging(value);
					this.SendPropertyChanging();
					this._TONGTHANHTIEN = value;
					this.SendPropertyChanged("TONGTHANHTIEN");
					this.OnTONGTHANHTIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CT_HOADON", Storage="_CT_HOADONs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<CT_HOADON> CT_HOADONs
		{
			get
			{
				return this._CT_HOADONs;
			}
			set
			{
				this._CT_HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HOADONs(CT_HOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CT_HOADONs(CT_HOADON entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _MALOAI_KH;
		
		private string _TENKH;
		
		private string _DIACHI_KH;
		
		private string _SDT_KH;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntityRef<LOAIKHACHHANG> _LOAIKHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnMALOAI_KHChanging(string value);
    partial void OnMALOAI_KHChanged();
    partial void OnTENKHChanging(string value);
    partial void OnTENKHChanged();
    partial void OnDIACHI_KHChanging(string value);
    partial void OnDIACHI_KHChanged();
    partial void OnSDT_KHChanging(string value);
    partial void OnSDT_KHChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._LOAIKHACHHANG = default(EntityRef<LOAIKHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI_KH", DbType="NChar(5)")]
		public string MALOAI_KH
		{
			get
			{
				return this._MALOAI_KH;
			}
			set
			{
				if ((this._MALOAI_KH != value))
				{
					if (this._LOAIKHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAI_KHChanging(value);
					this.SendPropertyChanging();
					this._MALOAI_KH = value;
					this.SendPropertyChanged("MALOAI_KH");
					this.OnMALOAI_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKH", DbType="NVarChar(30)")]
		public string TENKH
		{
			get
			{
				return this._TENKH;
			}
			set
			{
				if ((this._TENKH != value))
				{
					this.OnTENKHChanging(value);
					this.SendPropertyChanging();
					this._TENKH = value;
					this.SendPropertyChanged("TENKH");
					this.OnTENKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI_KH", DbType="NVarChar(50)")]
		public string DIACHI_KH
		{
			get
			{
				return this._DIACHI_KH;
			}
			set
			{
				if ((this._DIACHI_KH != value))
				{
					this.OnDIACHI_KHChanging(value);
					this.SendPropertyChanging();
					this._DIACHI_KH = value;
					this.SendPropertyChanged("DIACHI_KH");
					this.OnDIACHI_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_KH", DbType="NVarChar(11)")]
		public string SDT_KH
		{
			get
			{
				return this._SDT_KH;
			}
			set
			{
				if ((this._SDT_KH != value))
				{
					this.OnSDT_KHChanging(value);
					this.SendPropertyChanging();
					this._SDT_KH = value;
					this.SendPropertyChanged("SDT_KH");
					this.OnSDT_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIKHACHHANG_KHACHHANG", Storage="_LOAIKHACHHANG", ThisKey="MALOAI_KH", OtherKey="MALOAI_KH", IsForeignKey=true)]
		public LOAIKHACHHANG LOAIKHACHHANG
		{
			get
			{
				return this._LOAIKHACHHANG.Entity;
			}
			set
			{
				LOAIKHACHHANG previousValue = this._LOAIKHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._LOAIKHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIKHACHHANG.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._LOAIKHACHHANG.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._MALOAI_KH = value.MALOAI_KH;
					}
					else
					{
						this._MALOAI_KH = default(string);
					}
					this.SendPropertyChanged("LOAIKHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHUYENMAI")]
	public partial class KHUYENMAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKHUYENMAI;
		
		private string _TENKHUYENMAI;
		
		private System.Nullable<double> _TILEGIAMGIA;
		
		private EntitySet<HANGHOA> _HANGHOAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHUYENMAIChanging(string value);
    partial void OnMAKHUYENMAIChanged();
    partial void OnTENKHUYENMAIChanging(string value);
    partial void OnTENKHUYENMAIChanged();
    partial void OnTILEGIAMGIAChanging(System.Nullable<double> value);
    partial void OnTILEGIAMGIAChanged();
    #endregion
		
		public KHUYENMAI()
		{
			this._HANGHOAs = new EntitySet<HANGHOA>(new Action<HANGHOA>(this.attach_HANGHOAs), new Action<HANGHOA>(this.detach_HANGHOAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHUYENMAI", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKHUYENMAI
		{
			get
			{
				return this._MAKHUYENMAI;
			}
			set
			{
				if ((this._MAKHUYENMAI != value))
				{
					this.OnMAKHUYENMAIChanging(value);
					this.SendPropertyChanging();
					this._MAKHUYENMAI = value;
					this.SendPropertyChanged("MAKHUYENMAI");
					this.OnMAKHUYENMAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENKHUYENMAI", DbType="NVarChar(30)")]
		public string TENKHUYENMAI
		{
			get
			{
				return this._TENKHUYENMAI;
			}
			set
			{
				if ((this._TENKHUYENMAI != value))
				{
					this.OnTENKHUYENMAIChanging(value);
					this.SendPropertyChanging();
					this._TENKHUYENMAI = value;
					this.SendPropertyChanged("TENKHUYENMAI");
					this.OnTENKHUYENMAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TILEGIAMGIA", DbType="Float")]
		public System.Nullable<double> TILEGIAMGIA
		{
			get
			{
				return this._TILEGIAMGIA;
			}
			set
			{
				if ((this._TILEGIAMGIA != value))
				{
					this.OnTILEGIAMGIAChanging(value);
					this.SendPropertyChanging();
					this._TILEGIAMGIA = value;
					this.SendPropertyChanged("TILEGIAMGIA");
					this.OnTILEGIAMGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_HANGHOA", Storage="_HANGHOAs", ThisKey="MAKHUYENMAI", OtherKey="MAKHUYENMAI")]
		public EntitySet<HANGHOA> HANGHOAs
		{
			get
			{
				return this._HANGHOAs;
			}
			set
			{
				this._HANGHOAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HANGHOAs(HANGHOA entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = this;
		}
		
		private void detach_HANGHOAs(HANGHOA entity)
		{
			this.SendPropertyChanging();
			entity.KHUYENMAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIHANGHOA")]
	public partial class LOAIHANGHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAI_HH;
		
		private string _TENLOAI_HH;
		
		private EntitySet<HANGHOA> _HANGHOAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAI_HHChanging(string value);
    partial void OnMALOAI_HHChanged();
    partial void OnTENLOAI_HHChanging(string value);
    partial void OnTENLOAI_HHChanged();
    #endregion
		
		public LOAIHANGHOA()
		{
			this._HANGHOAs = new EntitySet<HANGHOA>(new Action<HANGHOA>(this.attach_HANGHOAs), new Action<HANGHOA>(this.detach_HANGHOAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI_HH", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAI_HH
		{
			get
			{
				return this._MALOAI_HH;
			}
			set
			{
				if ((this._MALOAI_HH != value))
				{
					this.OnMALOAI_HHChanging(value);
					this.SendPropertyChanging();
					this._MALOAI_HH = value;
					this.SendPropertyChanged("MALOAI_HH");
					this.OnMALOAI_HHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI_HH", DbType="NVarChar(30)")]
		public string TENLOAI_HH
		{
			get
			{
				return this._TENLOAI_HH;
			}
			set
			{
				if ((this._TENLOAI_HH != value))
				{
					this.OnTENLOAI_HHChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI_HH = value;
					this.SendPropertyChanged("TENLOAI_HH");
					this.OnTENLOAI_HHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIHANGHOA_HANGHOA", Storage="_HANGHOAs", ThisKey="MALOAI_HH", OtherKey="MALOAI_HH")]
		public EntitySet<HANGHOA> HANGHOAs
		{
			get
			{
				return this._HANGHOAs;
			}
			set
			{
				this._HANGHOAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HANGHOAs(HANGHOA entity)
		{
			this.SendPropertyChanging();
			entity.LOAIHANGHOA = this;
		}
		
		private void detach_HANGHOAs(HANGHOA entity)
		{
			this.SendPropertyChanging();
			entity.LOAIHANGHOA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIKHACHHANG")]
	public partial class LOAIKHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALOAI_KH;
		
		private string _TENLOAI_KH;
		
		private System.Nullable<double> _CHIETKHAU_KH;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALOAI_KHChanging(string value);
    partial void OnMALOAI_KHChanged();
    partial void OnTENLOAI_KHChanging(string value);
    partial void OnTENLOAI_KHChanged();
    partial void OnCHIETKHAU_KHChanging(System.Nullable<double> value);
    partial void OnCHIETKHAU_KHChanged();
    #endregion
		
		public LOAIKHACHHANG()
		{
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI_KH", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALOAI_KH
		{
			get
			{
				return this._MALOAI_KH;
			}
			set
			{
				if ((this._MALOAI_KH != value))
				{
					this.OnMALOAI_KHChanging(value);
					this.SendPropertyChanging();
					this._MALOAI_KH = value;
					this.SendPropertyChanged("MALOAI_KH");
					this.OnMALOAI_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI_KH", DbType="NVarChar(30)")]
		public string TENLOAI_KH
		{
			get
			{
				return this._TENLOAI_KH;
			}
			set
			{
				if ((this._TENLOAI_KH != value))
				{
					this.OnTENLOAI_KHChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI_KH = value;
					this.SendPropertyChanged("TENLOAI_KH");
					this.OnTENLOAI_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHIETKHAU_KH", DbType="Float")]
		public System.Nullable<double> CHIETKHAU_KH
		{
			get
			{
				return this._CHIETKHAU_KH;
			}
			set
			{
				if ((this._CHIETKHAU_KH != value))
				{
					this.OnCHIETKHAU_KHChanging(value);
					this.SendPropertyChanging();
					this._CHIETKHAU_KH = value;
					this.SendPropertyChanged("CHIETKHAU_KH");
					this.OnCHIETKHAU_KHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIKHACHHANG_KHACHHANG", Storage="_KHACHHANGs", ThisKey="MALOAI_KH", OtherKey="MALOAI_KH")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIKHACHHANG = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.LOAIKHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHACUNGCAP")]
	public partial class NHACUNGCAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANCC;
		
		private string _TENNCC;
		
		private string _DIACHI_NCC;
		
		private string _SDT_NCC;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANCCChanging(string value);
    partial void OnMANCCChanged();
    partial void OnTENNCCChanging(string value);
    partial void OnTENNCCChanged();
    partial void OnDIACHI_NCCChanging(string value);
    partial void OnDIACHI_NCCChanged();
    partial void OnSDT_NCCChanging(string value);
    partial void OnSDT_NCCChanged();
    #endregion
		
		public NHACUNGCAP()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANCC", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANCC
		{
			get
			{
				return this._MANCC;
			}
			set
			{
				if ((this._MANCC != value))
				{
					this.OnMANCCChanging(value);
					this.SendPropertyChanging();
					this._MANCC = value;
					this.SendPropertyChanged("MANCC");
					this.OnMANCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNCC", DbType="NVarChar(30)")]
		public string TENNCC
		{
			get
			{
				return this._TENNCC;
			}
			set
			{
				if ((this._TENNCC != value))
				{
					this.OnTENNCCChanging(value);
					this.SendPropertyChanging();
					this._TENNCC = value;
					this.SendPropertyChanged("TENNCC");
					this.OnTENNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI_NCC", DbType="NVarChar(50)")]
		public string DIACHI_NCC
		{
			get
			{
				return this._DIACHI_NCC;
			}
			set
			{
				if ((this._DIACHI_NCC != value))
				{
					this.OnDIACHI_NCCChanging(value);
					this.SendPropertyChanging();
					this._DIACHI_NCC = value;
					this.SendPropertyChanged("DIACHI_NCC");
					this.OnDIACHI_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_NCC", DbType="NVarChar(11)")]
		public string SDT_NCC
		{
			get
			{
				return this._SDT_NCC;
			}
			set
			{
				if ((this._SDT_NCC != value))
				{
					this.OnSDT_NCCChanging(value);
					this.SendPropertyChanging();
					this._SDT_NCC = value;
					this.SendPropertyChanged("SDT_NCC");
					this.OnSDT_NCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHACUNGCAP_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MANCC", OtherKey="MANCC")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHACUNGCAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHANVIEN")]
	public partial class NHANVIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _MATKHAU;
		
		private string _TENNV;
		
		private string _DIACHI_NV;
		
		private string _SDT_NV;
		
		private EntitySet<PHIEUNHAP> _PHIEUNHAPs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<NHOMNGUOIDUNG_NV> _NHOMNGUOIDUNG_NVs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMATKHAUChanging(string value);
    partial void OnMATKHAUChanged();
    partial void OnTENNVChanging(string value);
    partial void OnTENNVChanged();
    partial void OnDIACHI_NVChanging(string value);
    partial void OnDIACHI_NVChanged();
    partial void OnSDT_NVChanging(string value);
    partial void OnSDT_NVChanged();
    #endregion
		
		public NHANVIEN()
		{
			this._PHIEUNHAPs = new EntitySet<PHIEUNHAP>(new Action<PHIEUNHAP>(this.attach_PHIEUNHAPs), new Action<PHIEUNHAP>(this.detach_PHIEUNHAPs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._NHOMNGUOIDUNG_NVs = new EntitySet<NHOMNGUOIDUNG_NV>(new Action<NHOMNGUOIDUNG_NV>(this.attach_NHOMNGUOIDUNG_NVs), new Action<NHOMNGUOIDUNG_NV>(this.detach_NHOMNGUOIDUNG_NVs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATKHAU", DbType="NVarChar(10)")]
		public string MATKHAU
		{
			get
			{
				return this._MATKHAU;
			}
			set
			{
				if ((this._MATKHAU != value))
				{
					this.OnMATKHAUChanging(value);
					this.SendPropertyChanging();
					this._MATKHAU = value;
					this.SendPropertyChanged("MATKHAU");
					this.OnMATKHAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNV", DbType="NVarChar(30)")]
		public string TENNV
		{
			get
			{
				return this._TENNV;
			}
			set
			{
				if ((this._TENNV != value))
				{
					this.OnTENNVChanging(value);
					this.SendPropertyChanging();
					this._TENNV = value;
					this.SendPropertyChanged("TENNV");
					this.OnTENNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI_NV", DbType="NVarChar(50)")]
		public string DIACHI_NV
		{
			get
			{
				return this._DIACHI_NV;
			}
			set
			{
				if ((this._DIACHI_NV != value))
				{
					this.OnDIACHI_NVChanging(value);
					this.SendPropertyChanging();
					this._DIACHI_NV = value;
					this.SendPropertyChanged("DIACHI_NV");
					this.OnDIACHI_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT_NV", DbType="NVarChar(11)")]
		public string SDT_NV
		{
			get
			{
				return this._SDT_NV;
			}
			set
			{
				if ((this._SDT_NV != value))
				{
					this.OnSDT_NVChanging(value);
					this.SendPropertyChanging();
					this._SDT_NV = value;
					this.SendPropertyChanged("SDT_NV");
					this.OnSDT_NVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_PHIEUNHAP", Storage="_PHIEUNHAPs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<PHIEUNHAP> PHIEUNHAPs
		{
			get
			{
				return this._PHIEUNHAPs;
			}
			set
			{
				this._PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_HOADON", Storage="_HOADONs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NHOMNGUOIDUNG_NV", Storage="_NHOMNGUOIDUNG_NVs", ThisKey="MANV", OtherKey="MANV")]
		public EntitySet<NHOMNGUOIDUNG_NV> NHOMNGUOIDUNG_NVs
		{
			get
			{
				return this._NHOMNGUOIDUNG_NVs;
			}
			set
			{
				this._NHOMNGUOIDUNG_NVs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_PHIEUNHAPs(PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
		
		private void attach_NHOMNGUOIDUNG_NVs(NHOMNGUOIDUNG_NV entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = this;
		}
		
		private void detach_NHOMNGUOIDUNG_NVs(NHOMNGUOIDUNG_NV entity)
		{
			this.SendPropertyChanging();
			entity.NHANVIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHOMNGUOIDUNG")]
	public partial class NHOMNGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANHOM;
		
		private string _TENNHOM;
		
		private EntitySet<NHOMNGUOIDUNG_NV> _NHOMNGUOIDUNG_NVs;
		
		private EntitySet<PHANQUYEN> _PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANHOMChanging(string value);
    partial void OnMANHOMChanged();
    partial void OnTENNHOMChanging(string value);
    partial void OnTENNHOMChanged();
    #endregion
		
		public NHOMNGUOIDUNG()
		{
			this._NHOMNGUOIDUNG_NVs = new EntitySet<NHOMNGUOIDUNG_NV>(new Action<NHOMNGUOIDUNG_NV>(this.attach_NHOMNGUOIDUNG_NVs), new Action<NHOMNGUOIDUNG_NV>(this.detach_NHOMNGUOIDUNG_NVs));
			this._PHANQUYENs = new EntitySet<PHANQUYEN>(new Action<PHANQUYEN>(this.attach_PHANQUYENs), new Action<PHANQUYEN>(this.detach_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHOM", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANHOM
		{
			get
			{
				return this._MANHOM;
			}
			set
			{
				if ((this._MANHOM != value))
				{
					this.OnMANHOMChanging(value);
					this.SendPropertyChanging();
					this._MANHOM = value;
					this.SendPropertyChanged("MANHOM");
					this.OnMANHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENNHOM", DbType="NVarChar(50)")]
		public string TENNHOM
		{
			get
			{
				return this._TENNHOM;
			}
			set
			{
				if ((this._TENNHOM != value))
				{
					this.OnTENNHOMChanging(value);
					this.SendPropertyChanging();
					this._TENNHOM = value;
					this.SendPropertyChanged("TENNHOM");
					this.OnTENNHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNGUOIDUNG_NHOMNGUOIDUNG_NV", Storage="_NHOMNGUOIDUNG_NVs", ThisKey="MANHOM", OtherKey="MANHOM")]
		public EntitySet<NHOMNGUOIDUNG_NV> NHOMNGUOIDUNG_NVs
		{
			get
			{
				return this._NHOMNGUOIDUNG_NVs;
			}
			set
			{
				this._NHOMNGUOIDUNG_NVs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNGUOIDUNG_PHANQUYEN", Storage="_PHANQUYENs", ThisKey="MANHOM", OtherKey="MANHOM")]
		public EntitySet<PHANQUYEN> PHANQUYENs
		{
			get
			{
				return this._PHANQUYENs;
			}
			set
			{
				this._PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHOMNGUOIDUNG_NVs(NHOMNGUOIDUNG_NV entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNGUOIDUNG = this;
		}
		
		private void detach_NHOMNGUOIDUNG_NVs(NHOMNGUOIDUNG_NV entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNGUOIDUNG = null;
		}
		
		private void attach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNGUOIDUNG = this;
		}
		
		private void detach_PHANQUYENs(PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.NHOMNGUOIDUNG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHOMNGUOIDUNG_NV")]
	public partial class NHOMNGUOIDUNG_NV : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANV;
		
		private string _MANHOM;
		
		private string _GHICHU;
		
		private EntityRef<NHANVIEN> _NHANVIEN;
		
		private EntityRef<NHOMNGUOIDUNG> _NHOMNGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANVChanging(string value);
    partial void OnMANVChanged();
    partial void OnMANHOMChanging(string value);
    partial void OnMANHOMChanged();
    partial void OnGHICHUChanging(string value);
    partial void OnGHICHUChanged();
    #endregion
		
		public NHOMNGUOIDUNG_NV()
		{
			this._NHANVIEN = default(EntityRef<NHANVIEN>);
			this._NHOMNGUOIDUNG = default(EntityRef<NHOMNGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANV", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANV
		{
			get
			{
				return this._MANV;
			}
			set
			{
				if ((this._MANV != value))
				{
					if (this._NHANVIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANVChanging(value);
					this.SendPropertyChanging();
					this._MANV = value;
					this.SendPropertyChanged("MANV");
					this.OnMANVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHOM", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANHOM
		{
			get
			{
				return this._MANHOM;
			}
			set
			{
				if ((this._MANHOM != value))
				{
					if (this._NHOMNGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHOMChanging(value);
					this.SendPropertyChanging();
					this._MANHOM = value;
					this.SendPropertyChanged("MANHOM");
					this.OnMANHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GHICHU", DbType="NVarChar(50)")]
		public string GHICHU
		{
			get
			{
				return this._GHICHU;
			}
			set
			{
				if ((this._GHICHU != value))
				{
					this.OnGHICHUChanging(value);
					this.SendPropertyChanging();
					this._GHICHU = value;
					this.SendPropertyChanged("GHICHU");
					this.OnGHICHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHANVIEN_NHOMNGUOIDUNG_NV", Storage="_NHANVIEN", ThisKey="MANV", OtherKey="MANV", IsForeignKey=true)]
		public NHANVIEN NHANVIEN
		{
			get
			{
				return this._NHANVIEN.Entity;
			}
			set
			{
				NHANVIEN previousValue = this._NHANVIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHANVIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHANVIEN.Entity = null;
						previousValue.NHOMNGUOIDUNG_NVs.Remove(this);
					}
					this._NHANVIEN.Entity = value;
					if ((value != null))
					{
						value.NHOMNGUOIDUNG_NVs.Add(this);
						this._MANV = value.MANV;
					}
					else
					{
						this._MANV = default(string);
					}
					this.SendPropertyChanged("NHANVIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNGUOIDUNG_NHOMNGUOIDUNG_NV", Storage="_NHOMNGUOIDUNG", ThisKey="MANHOM", OtherKey="MANHOM", IsForeignKey=true)]
		public NHOMNGUOIDUNG NHOMNGUOIDUNG
		{
			get
			{
				return this._NHOMNGUOIDUNG.Entity;
			}
			set
			{
				NHOMNGUOIDUNG previousValue = this._NHOMNGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NHOMNGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMNGUOIDUNG.Entity = null;
						previousValue.NHOMNGUOIDUNG_NVs.Remove(this);
					}
					this._NHOMNGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.NHOMNGUOIDUNG_NVs.Add(this);
						this._MANHOM = value.MANHOM;
					}
					else
					{
						this._MANHOM = default(string);
					}
					this.SendPropertyChanged("NHOMNGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHANQUYEN")]
	public partial class PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MANHOM;
		
		private string _MAMANHINH;
		
		private string _COQUYEN;
		
		private EntityRef<DM_MANHINH> _DM_MANHINH;
		
		private EntityRef<NHOMNGUOIDUNG> _NHOMNGUOIDUNG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMANHOMChanging(string value);
    partial void OnMANHOMChanged();
    partial void OnMAMANHINHChanging(string value);
    partial void OnMAMANHINHChanged();
    partial void OnCOQUYENChanging(string value);
    partial void OnCOQUYENChanged();
    #endregion
		
		public PHANQUYEN()
		{
			this._DM_MANHINH = default(EntityRef<DM_MANHINH>);
			this._NHOMNGUOIDUNG = default(EntityRef<NHOMNGUOIDUNG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MANHOM", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MANHOM
		{
			get
			{
				return this._MANHOM;
			}
			set
			{
				if ((this._MANHOM != value))
				{
					if (this._NHOMNGUOIDUNG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMANHOMChanging(value);
					this.SendPropertyChanging();
					this._MANHOM = value;
					this.SendPropertyChanged("MANHOM");
					this.OnMANHOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAMANHINH", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAMANHINH
		{
			get
			{
				return this._MAMANHINH;
			}
			set
			{
				if ((this._MAMANHINH != value))
				{
					if (this._DM_MANHINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAMANHINHChanging(value);
					this.SendPropertyChanging();
					this._MAMANHINH = value;
					this.SendPropertyChanged("MAMANHINH");
					this.OnMAMANHINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COQUYEN", DbType="NVarChar(50)")]
		public string COQUYEN
		{
			get
			{
				return this._COQUYEN;
			}
			set
			{
				if ((this._COQUYEN != value))
				{
					this.OnCOQUYENChanging(value);
					this.SendPropertyChanging();
					this._COQUYEN = value;
					this.SendPropertyChanged("COQUYEN");
					this.OnCOQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DM_MANHINH_PHANQUYEN", Storage="_DM_MANHINH", ThisKey="MAMANHINH", OtherKey="MAMANHINH", IsForeignKey=true)]
		public DM_MANHINH DM_MANHINH
		{
			get
			{
				return this._DM_MANHINH.Entity;
			}
			set
			{
				DM_MANHINH previousValue = this._DM_MANHINH.Entity;
				if (((previousValue != value) 
							|| (this._DM_MANHINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DM_MANHINH.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._DM_MANHINH.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._MAMANHINH = value.MAMANHINH;
					}
					else
					{
						this._MAMANHINH = default(string);
					}
					this.SendPropertyChanged("DM_MANHINH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHOMNGUOIDUNG_PHANQUYEN", Storage="_NHOMNGUOIDUNG", ThisKey="MANHOM", OtherKey="MANHOM", IsForeignKey=true)]
		public NHOMNGUOIDUNG NHOMNGUOIDUNG
		{
			get
			{
				return this._NHOMNGUOIDUNG.Entity;
			}
			set
			{
				NHOMNGUOIDUNG previousValue = this._NHOMNGUOIDUNG.Entity;
				if (((previousValue != value) 
							|| (this._NHOMNGUOIDUNG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHOMNGUOIDUNG.Entity = null;
						previousValue.PHANQUYENs.Remove(this);
					}
					this._NHOMNGUOIDUNG.Entity = value;
					if ((value != null))
					{
						value.PHANQUYENs.Add(this);
						this._MANHOM = value.MANHOM;
					}
					else
					{
						this._MANHOM = default(string);
					}
					this.SendPropertyChanged("NHOMNGUOIDUNG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HANGHOA")]
	public partial class HANGHOA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHH;
		
		private string _MALOAI_HH;
		
		private string _MAKHUYENMAI;
		
		private string _TENHH;
		
		private System.Nullable<int> _SOLUONGTON;
		
		private System.Nullable<double> _GIATIEN;
		
		private string _NOIDUNG;
		
		private EntitySet<CT_HOADON> _CT_HOADONs;
		
		private EntitySet<CT_PHIEUNHAP> _CT_PHIEUNHAPs;
		
		private EntityRef<KHUYENMAI> _KHUYENMAI;
		
		private EntityRef<LOAIHANGHOA> _LOAIHANGHOA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHHChanging(string value);
    partial void OnMAHHChanged();
    partial void OnMALOAI_HHChanging(string value);
    partial void OnMALOAI_HHChanged();
    partial void OnMAKHUYENMAIChanging(string value);
    partial void OnMAKHUYENMAIChanged();
    partial void OnTENHHChanging(string value);
    partial void OnTENHHChanged();
    partial void OnSOLUONGTONChanging(System.Nullable<int> value);
    partial void OnSOLUONGTONChanged();
    partial void OnGIATIENChanging(System.Nullable<double> value);
    partial void OnGIATIENChanged();
    partial void OnNOIDUNGChanging(string value);
    partial void OnNOIDUNGChanged();
    #endregion
		
		public HANGHOA()
		{
			this._CT_HOADONs = new EntitySet<CT_HOADON>(new Action<CT_HOADON>(this.attach_CT_HOADONs), new Action<CT_HOADON>(this.detach_CT_HOADONs));
			this._CT_PHIEUNHAPs = new EntitySet<CT_PHIEUNHAP>(new Action<CT_PHIEUNHAP>(this.attach_CT_PHIEUNHAPs), new Action<CT_PHIEUNHAP>(this.detach_CT_PHIEUNHAPs));
			this._KHUYENMAI = default(EntityRef<KHUYENMAI>);
			this._LOAIHANGHOA = default(EntityRef<LOAIHANGHOA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHH", DbType="NChar(5) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHH
		{
			get
			{
				return this._MAHH;
			}
			set
			{
				if ((this._MAHH != value))
				{
					this.OnMAHHChanging(value);
					this.SendPropertyChanging();
					this._MAHH = value;
					this.SendPropertyChanged("MAHH");
					this.OnMAHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALOAI_HH", DbType="NChar(5)")]
		public string MALOAI_HH
		{
			get
			{
				return this._MALOAI_HH;
			}
			set
			{
				if ((this._MALOAI_HH != value))
				{
					if (this._LOAIHANGHOA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALOAI_HHChanging(value);
					this.SendPropertyChanging();
					this._MALOAI_HH = value;
					this.SendPropertyChanged("MALOAI_HH");
					this.OnMALOAI_HHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKHUYENMAI", DbType="NChar(5)")]
		public string MAKHUYENMAI
		{
			get
			{
				return this._MAKHUYENMAI;
			}
			set
			{
				if ((this._MAKHUYENMAI != value))
				{
					if (this._KHUYENMAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHUYENMAIChanging(value);
					this.SendPropertyChanging();
					this._MAKHUYENMAI = value;
					this.SendPropertyChanged("MAKHUYENMAI");
					this.OnMAKHUYENMAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENHH", DbType="NVarChar(30)")]
		public string TENHH
		{
			get
			{
				return this._TENHH;
			}
			set
			{
				if ((this._TENHH != value))
				{
					this.OnTENHHChanging(value);
					this.SendPropertyChanging();
					this._TENHH = value;
					this.SendPropertyChanged("TENHH");
					this.OnTENHHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGTON", DbType="Int")]
		public System.Nullable<int> SOLUONGTON
		{
			get
			{
				return this._SOLUONGTON;
			}
			set
			{
				if ((this._SOLUONGTON != value))
				{
					this.OnSOLUONGTONChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGTON = value;
					this.SendPropertyChanged("SOLUONGTON");
					this.OnSOLUONGTONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIATIEN", DbType="Float")]
		public System.Nullable<double> GIATIEN
		{
			get
			{
				return this._GIATIEN;
			}
			set
			{
				if ((this._GIATIEN != value))
				{
					this.OnGIATIENChanging(value);
					this.SendPropertyChanging();
					this._GIATIEN = value;
					this.SendPropertyChanged("GIATIEN");
					this.OnGIATIENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOIDUNG", DbType="NVarChar(50)")]
		public string NOIDUNG
		{
			get
			{
				return this._NOIDUNG;
			}
			set
			{
				if ((this._NOIDUNG != value))
				{
					this.OnNOIDUNGChanging(value);
					this.SendPropertyChanging();
					this._NOIDUNG = value;
					this.SendPropertyChanged("NOIDUNG");
					this.OnNOIDUNGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_CT_HOADON", Storage="_CT_HOADONs", ThisKey="MAHH", OtherKey="MAHH")]
		public EntitySet<CT_HOADON> CT_HOADONs
		{
			get
			{
				return this._CT_HOADONs;
			}
			set
			{
				this._CT_HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HANGHOA_CT_PHIEUNHAP", Storage="_CT_PHIEUNHAPs", ThisKey="MAHH", OtherKey="MAHH")]
		public EntitySet<CT_PHIEUNHAP> CT_PHIEUNHAPs
		{
			get
			{
				return this._CT_PHIEUNHAPs;
			}
			set
			{
				this._CT_PHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHUYENMAI_HANGHOA", Storage="_KHUYENMAI", ThisKey="MAKHUYENMAI", OtherKey="MAKHUYENMAI", IsForeignKey=true)]
		public KHUYENMAI KHUYENMAI
		{
			get
			{
				return this._KHUYENMAI.Entity;
			}
			set
			{
				KHUYENMAI previousValue = this._KHUYENMAI.Entity;
				if (((previousValue != value) 
							|| (this._KHUYENMAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHUYENMAI.Entity = null;
						previousValue.HANGHOAs.Remove(this);
					}
					this._KHUYENMAI.Entity = value;
					if ((value != null))
					{
						value.HANGHOAs.Add(this);
						this._MAKHUYENMAI = value.MAKHUYENMAI;
					}
					else
					{
						this._MAKHUYENMAI = default(string);
					}
					this.SendPropertyChanged("KHUYENMAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIHANGHOA_HANGHOA", Storage="_LOAIHANGHOA", ThisKey="MALOAI_HH", OtherKey="MALOAI_HH", IsForeignKey=true)]
		public LOAIHANGHOA LOAIHANGHOA
		{
			get
			{
				return this._LOAIHANGHOA.Entity;
			}
			set
			{
				LOAIHANGHOA previousValue = this._LOAIHANGHOA.Entity;
				if (((previousValue != value) 
							|| (this._LOAIHANGHOA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIHANGHOA.Entity = null;
						previousValue.HANGHOAs.Remove(this);
					}
					this._LOAIHANGHOA.Entity = value;
					if ((value != null))
					{
						value.HANGHOAs.Add(this);
						this._MALOAI_HH = value.MALOAI_HH;
					}
					else
					{
						this._MALOAI_HH = default(string);
					}
					this.SendPropertyChanged("LOAIHANGHOA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_HOADONs(CT_HOADON entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = this;
		}
		
		private void detach_CT_HOADONs(CT_HOADON entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = null;
		}
		
		private void attach_CT_PHIEUNHAPs(CT_PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = this;
		}
		
		private void detach_CT_PHIEUNHAPs(CT_PHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.HANGHOA = null;
		}
	}
}
#pragma warning restore 1591
